// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Profile /> should match snapshot 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(withRouter(viewIncident))>
        <withRouter(viewIncident)
          Records={
            Object {
              "errors": null,
              "incidents": Array [],
              "isFetching": false,
            }
          }
          fetchIncident={[Function]}
        >
          <Route>
            <viewIncident
              Records={
                Object {
                  "errors": null,
                  "incidents": Array [],
                  "isFetching": false,
                }
              }
              fetchIncident={[Function]}
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <div
                className="container"
              >
                <p
                  className="record-title"
                >
                  Redflag Records
                </p>
                <div
                  className="records"
                >
                  <span>
                    NO RESULTS FOUND
                  </span>
                </div>
              </div>
            </viewIncident>
          </Route>
        </withRouter(viewIncident)>
      </Connect(withRouter(viewIncident))>
    </Router>
  </BrowserRouter>
</Provider>
`;
